from apscheduler.schedulers.blocking import BlockingScheduler
from picamera import PiCamera
from datetime import datetime
import pytz
import os
import logging

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Initialize the camera
try:
    camera = PiCamera()
except Exception as e:
    logger.error(f"Failed to initialize camera: {e}")
    camera = None

def ensure_directory_exists(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)

def job():
    try:
        timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        save_path = '/path/to/save/image'
        ensure_directory_exists(save_path)
        if camera:
            camera.capture(os.path.join(save_path, f'{timestamp}.jpg'))
            logger.info(f"Captured image at {timestamp}")
        else:
            logger.error("Camera is not initialized. Cannot capture image.")
    except Exception as e:
        logger.error(f"Error in job execution: {e}")

scheduler = BlockingScheduler()

# Schedule job at 9am UTC
try:
    scheduler.add_job(job, 'interval', days=1, start_date='2023-01-01 09:00:00', timezone=pytz.utc)
    scheduler.start()
except Exception as e:
    logger.error(f"Error with the scheduler: {e}")

